spring.application.name=resumed
gemini.api.key=${GEMINI_API_KEY}
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
#logging.level.org.springframework.web: DEBUG
spring.servlet.multipart.enabled=true
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.boot.autoconfigure.web.servlet=DEBUG

# PostgreSQL database configuration
spring.datasource.url=jdbc:postgresql://${RESUME_SUGGESTOR_DB_HOST}:6543/postgres
spring.datasource.username=${RESUME_SUGGESTOR_DB_USER}
spring.datasource.password=${RESUME_SUGGESTOR_DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.data-source-properties.prepareThreshold=0
spring.datasource.hikari.data-source-properties.cachePrepStmts=false

# JPA configurations
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# S3 config
aws.s3.region=${RESUME_SUGGESTOR_S3_REGION}
aws.s3.bucket-name=${RESUME_SUGGESTOR_S3_BUCKET_NAME}
aws.s3.endpoint=${RESUME_SUGGESTOR_S3_ENDPOINT}


resumed.s3.api.url=${RESUMED_S3_API_URL}

# kafka config
spring.kafka.bootstrap-servers=${RESUMED_KAFKA_BROKER_URL}
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-512
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${RESUMED_KAFKA_USERNAME}" password="${RESUMED_KAFKA_PASSWORD}";
spring.kafka.consumer.group-id=resumed-be
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
